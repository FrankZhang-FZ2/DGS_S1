names <- dict %>%
filter(type == "character") %>%
pull(variable)
data[,names] <-
lapply(data[,names], as.character)
names <- dict %>%
filter(type == "factor") %>%
pull(variable)
data[,names] <-
lapply(data[,names], as.numeric) #factor variables are coded as numeric for codebook purposes
names <- dict %>%
filter(type == "numeric") %>%
pull(variable)
data[,names] <-
lapply(data[,names], as.numeric)
rm(names)
#DGS recode
likert <- dict %>%
filter (value_label == "1 = Strongly disagree, 2 = Disagree, 3 = Somewhat disagree, 4 = Neither agree nor disagree, 5 = Somewhat agree, 6 = Agree, 7 = Strongly agree") %>%
pull(variable)
add_likert <- function(x) {
val_labels(x) <- c("Strongly disagree"= 1, "Disagree" = 2, "Somewhat disagree" = 3, "Neither agree nor disagree" = 4, "Somewhat agree" = 5, "Agree" = 6, "Strongly agree" = 7)
x
}
data <- data %>%
mutate_at(likert,
add_likert)
rm(likert, add_likert)
#HEXACO_C
likert <- dict %>%
filter (value_label == "1 = Strongly disagree, 2 = Somewhat disagree, 3 = Neither agree nor disagree, 4 = Somewhat agree, 5 = Strongly agree") %>%
pull(variable)
add_likert <- function(x) {
val_labels(x) <- c("Strongly disagree"= 1, "Somewhat disagree" = 2, "Neither agree nor disagree" = 3, "Somewhat agree" = 4, "Strongly agree" = 5)
x
}
data <- data %>%
mutate_at(likert,
add_likert)
rm(likert, add_likert)
## Reverse-scoring
#reversed_items <- dict %>%  #make a list of reversed items
# filter (keying == -1) %>%
# pull(variable)
#data <- data %>%  #reverse values in data
# mutate_at(reversed_items,
#reverse_labelled_values)
rm(reversed_items)
##scale construction
##DGS
DGS <- dict %>%
filter (scale == "DGS") %>%
pull(variable)
data$DGS <- data %>%
select(all_of(DGS)) %>%
aggregate_and_document_scale()
##HEXACO_C
HEXACO_C <- dict %>%
filter (scale == "HEXACO_C") %>%
pull(variable)
data$HEXACO_C <- data %>%
select(all_of(HEXACO_C)) %>%
aggregate_and_document_scale()
###Conscientiousness
Organization <- dict %>%
filter (subscale == "Organization") %>%
pull(variable)
Diligence <- dict %>%
filter (subscale == "Diligence") %>%
pull(variable)
Perfectionism <- dict %>%
filter (subscale == "Perfectionism") %>%
pull(variable)
Prudence <- dict %>%
filter (subscale == "Prudence") %>%
pull(variable)
###Conscientiousness
data$Organization <- data %>%
select(all_of(Organization)) %>%
aggregate_and_document_scale()
data$Diligence  <- data %>%
select(all_of(Diligence)) %>%
aggregate_and_document_scale()
data$Perfectionism <- data %>%
select(all_of(Perfectionism)) %>%
aggregate_and_document_scale()
data$Prudence <- data %>%
select(all_of(Prudence)) %>%
aggregate_and_document_scale()
## Variable labels
var_label(data) <- dict %>%
select(variable, label) %>%
dict_to_list()
rm(extra)
##remove failed attention check and NA
rindex <- rep(FALSE, nrow(data))
for (i in 1:nrow(data)){
for (j in 1:grep("DGS_75",colnames(data))){
if( !(data[i,j] %in% 1:7)){
rindex[i] = TRUE
j = ncol(data)+1
}
}
}
data_error <- data[rindex,]
df <- data_error %>%
filter(!is.na(DGS_1))
data_cleaned <- data[!rindex,]
for (i in 1:nrow(df)){
for (j in 1:ncol(df)){
if( !(df[i,j] %in% 1:7)){
df[i,j] == 4
}
}
}
##attention -19
data_cleaned <- data_cleaned %>%
filter(DGS_31 == 4) %>%
filter((DGS_53 == 2))
m1 <- data_cleaned[grep("DGS_1",colnames(data_cleaned)):grep("DGS_75",colnames(data_cleaned))]
m1<- m1[,-c(grep("DGS_31",colnames(m1)),grep("DGS_53",colnames(m1)))]
DGS_descriptive <- describe(m1)
View(DGS_descriptive)
## use other read functions as appropriate for file type
dict <- rio::import(file = "data/DGS_S1_dictionary.xlsx") #dictionary
data <- read.csv(file = 'data/DGS_S1_Deidentified For Analyses.csv', sep = ",") #data
data <- data[-c(1:2),-c(1:7)]
## Variable types
names <- dict %>%
filter(type == "character") %>%
pull(variable)
data[,names] <-
lapply(data[,names], as.character)
names <- dict %>%
filter(type == "factor") %>%
pull(variable)
data[,names] <-
lapply(data[,names], as.numeric) #factor variables are coded as numeric for codebook purposes
names <- dict %>%
filter(type == "numeric") %>%
pull(variable)
data[,names] <-
lapply(data[,names], as.numeric)
rm(names)
#DGS recode
likert <- dict %>%
filter (value_label == "1 = Strongly disagree, 2 = Disagree, 3 = Somewhat disagree, 4 = Neither agree nor disagree, 5 = Somewhat agree, 6 = Agree, 7 = Strongly agree") %>%
pull(variable)
add_likert <- function(x) {
val_labels(x) <- c("Strongly disagree"= 1, "Disagree" = 2, "Somewhat disagree" = 3, "Neither agree nor disagree" = 4, "Somewhat agree" = 5, "Agree" = 6, "Strongly agree" = 7)
x
}
data <- data %>%
mutate_at(likert,
add_likert)
rm(likert, add_likert)
#HEXACO_C
likert <- dict %>%
filter (value_label == "1 = Strongly disagree, 2 = Somewhat disagree, 3 = Neither agree nor disagree, 4 = Somewhat agree, 5 = Strongly agree") %>%
pull(variable)
add_likert <- function(x) {
val_labels(x) <- c("Strongly disagree"= 1, "Somewhat disagree" = 2, "Neither agree nor disagree" = 3, "Somewhat agree" = 4, "Strongly agree" = 5)
x
}
data <- data %>%
mutate_at(likert,
add_likert)
rm(likert, add_likert)
## Reverse-scoring
reversed_items <- dict %>%  #make a list of reversed items
filter (keying == -1) %>%
pull(variable)
data <- data %>%  #reverse values in data
mutate_at(reversed_items,
reverse_labelled_values)
rm(reversed_items)
##scale construction
##DGS
DGS <- dict %>%
filter (scale == "DGS") %>%
pull(variable)
data$DGS <- data %>%
select(all_of(DGS)) %>%
aggregate_and_document_scale()
##HEXACO_C
HEXACO_C <- dict %>%
filter (scale == "HEXACO_C") %>%
pull(variable)
data$HEXACO_C <- data %>%
select(all_of(HEXACO_C)) %>%
aggregate_and_document_scale()
###Conscientiousness
Organization <- dict %>%
filter (subscale == "Organization") %>%
pull(variable)
Diligence <- dict %>%
filter (subscale == "Diligence") %>%
pull(variable)
Perfectionism <- dict %>%
filter (subscale == "Perfectionism") %>%
pull(variable)
Prudence <- dict %>%
filter (subscale == "Prudence") %>%
pull(variable)
###Conscientiousness
data$Organization <- data %>%
select(all_of(Organization)) %>%
aggregate_and_document_scale()
data$Diligence  <- data %>%
select(all_of(Diligence)) %>%
aggregate_and_document_scale()
data$Perfectionism <- data %>%
select(all_of(Perfectionism)) %>%
aggregate_and_document_scale()
data$Prudence <- data %>%
select(all_of(Prudence)) %>%
aggregate_and_document_scale()
## Variable labels
var_label(data) <- dict %>%
select(variable, label) %>%
dict_to_list()
rm(extra)
##remove failed attention check and NA
rindex <- rep(FALSE, nrow(data))
for (i in 1:nrow(data)){
for (j in 1:grep("DGS_75",colnames(data))){
if( !(data[i,j] %in% 1:7)){
rindex[i] = TRUE
j = ncol(data)+1
}
}
}
data_error <- data[rindex,]
df <- data_error %>%
filter(!is.na(DGS_1))
data_cleaned <- data[!rindex,]
for (i in 1:nrow(df)){
for (j in 1:ncol(df)){
if( !(df[i,j] %in% 1:7)){
df[i,j] == 4
}
}
}
##attention -19
data_cleaned <- data_cleaned %>%
filter(DGS_31 == 4) %>%
filter((DGS_53 == 2))
M7_f5 <- m1%>%
select(DGS_2,DGS_11,DGS_48)
M<- M7_f5-1
RSM_M <- RSM(X = M)
person.parameter_M <- person.parameter(object = RSM_M)
## use other read functions as appropriate for file type
dict <- rio::import(file = "data/DGS_S1_dictionary.xlsx") #dictionary
data <- read.csv(file = 'data/DGS_S1_Deidentified For Analyses.csv', sep = ",") #data
data <- data[-c(1:2),-c(1:7)]
## Variable types
names <- dict %>%
filter(type == "character") %>%
pull(variable)
data[,names] <-
lapply(data[,names], as.character)
names <- dict %>%
filter(type == "factor") %>%
pull(variable)
data[,names] <-
lapply(data[,names], as.numeric) #factor variables are coded as numeric for codebook purposes
names <- dict %>%
filter(type == "numeric") %>%
pull(variable)
data[,names] <-
lapply(data[,names], as.numeric)
rm(names)
#DGS recode
likert <- dict %>%
filter (value_label == "1 = Strongly disagree, 2 = Disagree, 3 = Somewhat disagree, 4 = Neither agree nor disagree, 5 = Somewhat agree, 6 = Agree, 7 = Strongly agree") %>%
pull(variable)
add_likert <- function(x) {
val_labels(x) <- c("Strongly disagree"= 1, "Disagree" = 2, "Somewhat disagree" = 3, "Neither agree nor disagree" = 4, "Somewhat agree" = 5, "Agree" = 6, "Strongly agree" = 7)
x
}
data <- data %>%
mutate_at(likert,
add_likert)
rm(likert, add_likert)
#HEXACO_C
likert <- dict %>%
filter (value_label == "1 = Strongly disagree, 2 = Somewhat disagree, 3 = Neither agree nor disagree, 4 = Somewhat agree, 5 = Strongly agree") %>%
pull(variable)
add_likert <- function(x) {
val_labels(x) <- c("Strongly disagree"= 1, "Somewhat disagree" = 2, "Neither agree nor disagree" = 3, "Somewhat agree" = 4, "Strongly agree" = 5)
x
}
data <- data %>%
mutate_at(likert,
add_likert)
rm(likert, add_likert)
## Reverse-scoring
reversed_items <- dict %>%  #make a list of reversed items
filter (keying == -1) %>%
pull(variable)
data <- data %>%  #reverse values in data
mutate_at(reversed_items,
reverse_labelled_values)
rm(reversed_items)
##scale construction
##DGS
DGS <- dict %>%
filter (scale == "DGS") %>%
pull(variable)
data$DGS <- data %>%
select(all_of(DGS)) %>%
aggregate_and_document_scale()
##HEXACO_C
HEXACO_C <- dict %>%
filter (scale == "HEXACO_C") %>%
pull(variable)
data$HEXACO_C <- data %>%
select(all_of(HEXACO_C)) %>%
aggregate_and_document_scale()
###Conscientiousness
Organization <- dict %>%
filter (subscale == "Organization") %>%
pull(variable)
Diligence <- dict %>%
filter (subscale == "Diligence") %>%
pull(variable)
Perfectionism <- dict %>%
filter (subscale == "Perfectionism") %>%
pull(variable)
Prudence <- dict %>%
filter (subscale == "Prudence") %>%
pull(variable)
###Conscientiousness
data$Organization <- data %>%
select(all_of(Organization)) %>%
aggregate_and_document_scale()
data$Diligence  <- data %>%
select(all_of(Diligence)) %>%
aggregate_and_document_scale()
data$Perfectionism <- data %>%
select(all_of(Perfectionism)) %>%
aggregate_and_document_scale()
data$Prudence <- data %>%
select(all_of(Prudence)) %>%
aggregate_and_document_scale()
## Variable labels
var_label(data) <- dict %>%
select(variable, label) %>%
dict_to_list()
rm(extra)
##remove failed attention check and NA
rindex <- rep(FALSE, nrow(data))
for (i in 1:nrow(data)){
for (j in 1:grep("DGS_75",colnames(data))){
if( !(data[i,j] %in% 1:7)){
rindex[i] = TRUE
j = ncol(data)+1
}
}
}
data_error <- data[rindex,]
df <- data_error %>%
filter(!is.na(DGS_1))
data_cleaned <- data[!rindex,]
for (i in 1:nrow(df)){
for (j in 1:ncol(df)){
if( !(df[i,j] %in% 1:7)){
df[i,j] == 4
}
}
}
##attention -19
data_cleaned <- data_cleaned %>%
filter(DGS_31 == 4) %>%
filter((DGS_53 == 2))
m1 <- data_cleaned[grep("DGS_1",colnames(data_cleaned)):grep("DGS_75",colnames(data_cleaned))]
m1<- m1[,-c(grep("DGS_31",colnames(m1)),grep("DGS_53",colnames(m1)))]
DGS_descriptive <- describe(m1)
M7_f5 <- m1%>%
select(DGS_2,DGS_11,DGS_48)
View(M7_f5)
M7_f5 <- m1%>%
select(DGS_2,DGS_11,DGS_48)
M<- M7_f5-1
RSM_M <- RSM(X = M)
person.parameter_M <- person.parameter(object = RSM_M)
itemfit_M <- itemfit(object = person.parameter_M)
itemfit_M
thresholds_M <- thresholds(object = RSM_M)
thresholds_M
v_threshpar <- thresholds_M$threshpar[1:2]
plotICC(object = RSM_M)
abline(v=v_threshpar,
col = "gray")
View(DGS_descriptive)
IRT_R <- function(x) {
RSM_M <- RSM(X = x)
person.parameter_M <- person.parameter(object = RSM_M)
itemfit_M <- itemfit(object = person.parameter_M)
thresholds_M <- thresholds(object = RSM_M)
return(thresholds_M)
return(itemfit_M)
}
IRT_R(M7_f5)
IRT_R <- function(x) {
x-1
RSM_M <- RSM(X = x)
person.parameter_M <- person.parameter(object = RSM_M)
itemfit_M <- itemfit(object = person.parameter_M)
thresholds_M <- thresholds(object = RSM_M)
return(thresholds_M)
return(itemfit_M)
}
IRT_R(M7_f5)
IRT_R <- function(x) {
M <- x-1
RSM_M <- RSM(X = M)
person.parameter_M <- person.parameter(object = RSM_M)
itemfit_M <- itemfit(object = person.parameter_M)
thresholds_M <- thresholds(object = RSM_M)
return(thresholds_M)
return(itemfit_M)
}
IRT_R(M7_f5)
IRT_R_G <- function(x) {
IRT_R(x)
v_threshpar <- thresholds_M$threshpar[1:2]
plotICC(object = RSM_M)
abline(v=v_threshpar,
col = "gray")
}
IRT_R_G(M7_f5)
scree
ev<- eigen(cor(m1))
ev$values
scree(m1, pc=FALSE)
fa.parallel(m1, fa="fa")
factanal(as.matrix(m1), factors =7, rotation = "varimax")
scree
ev<- eigen(cor(m1))
ev$values
scree(m1, pc=FALSE)
fa.parallel(m1, fa="fa")
factanal(as.matrix(m1), factors =8)
factanal(as.matrix(m1), factors =8)
load <- model7$loadings[,1:2]
model7 <- fastudy(m1, factors = 7,rotation = "varimax")
print(model7,digit = 2, cutoff = 0.40)
plot(model7, ylim = c(0, 7))
load <- model7$loadings[,1:2]
plot(load,type="n",xlim = c(0.5,1))
text(load,labels=names(m1),cex=.7)
loads <- model7$loadings
fa.diagram(loads)
psych::omega(m1)
?omega
psych::omega(m1,nfactors=7)
psych::omega(m1,nfactors=8)
psych::omega(m1,nfactors=8)
psych::omega(m1,nfactors=7)
IRT_R <- function(x) {
M <- x-1
RSM_M <- RSM(X = M)
person.parameter_M <- person.parameter(object = RSM_M)
itemfit_M <- itemfit(object = person.parameter_M)
thresholds_M <- thresholds(object = RSM_M)
return(thresholds_M)
return(itemfit_M)
rm(M)
rm(RSM_M)
rm(person.parameter_M)
rm(thresholds_M)
rm(itemfit_M)
}
IRT_R(M7_f5)
IRT_R(M7_f5)
rm(person.parameter_M)
IRT_R <- function(x) {
M <- x-1
RSM_M <- RSM(X = M)
person.parameter_M <- person.parameter(object = RSM_M)
itemfit_M <- itemfit(object = person.parameter_M)
thresholds_M <- thresholds(object = RSM_M)
return(thresholds_M)
return(itemfit_M)
rm(M)
rm(RSM_M)
rm(person.parameter_M)
}
IRT_R(M7_f5)
IRT_R <- function(x) {
M <- x-1
RSM_M <- RSM(X = M)
person.parameter_M <- person.parameter(object = RSM_M)
itemfit_M <- itemfit(object = person.parameter_M)
thresholds_M <- thresholds(object = RSM_M)
return(thresholds_M)
return(itemfit_M)
}
IRT_R(M7_f5)
M7_f6 <- m1%>%
select(DGS_21,DGS_65,DGS_1)
M<- M7_f6-1
RSM_M <- RSM(X = M)
person.parameter_M <- person.parameter(object = RSM_M)
itemfit_M <- itemfit(object = person.parameter_M)
itemfit_M
thresholds_M <- thresholds(object = RSM_M)
thresholds_M
v_threshpar <- thresholds_M$threshpar[1:2]
plotICC(object = RSM_M)
